@startuml RobDroneGo
'orto:
'left to right direction
top to bottom direction
skinparam linetype ortho
'skinparam linetype polyline

'#lightcyan
'#e4e6aa
'#9be0de
'#03fc98
'rose #e4e6aa



package "RobDroneGo" #edeceb {

/'
class "<<Root>> \nCampus" as Campus #03fc98{
    - nome: string
    - edificios: List<Edificio>
    - criarEdificio()
  }
'/

package "Agg-Edificio" {
                         class "<<Root>>\nEdificio" as Edificio #03fc98
                         {
                           - nome: string
                           - descricao: string
                           - hasElevador: boolean
                           - pisos: List<PisoID>
                           - pisoZero: int
                           - pisoMax: int
                         }

                         class "<<Identifier>>\nCodigo" as CodigoEdificio #e4e6aa{
                           - codigo: string
                         }

                              note right of CodigoEdificio
                               o código do edificio é obrigatório, no máximo 5 caracteres, letras e digitos, podendo conter espaços no meio

                              end note

                         class "<<Value Object>>\nDimensoesImplantacao" as DimensoesImplantacao #e4e6aa{
                           - largura: double
                           - altura: double
                         }

                         note right of Edificio
                           Dos esclarecimentos:
                           codigo (Id, unico, imutavel),
                           nome,
                           descricao,
                           DIMENSAO_PLANTA

                           o nome do edificio é opcional, no máximo 50 caracteres alfanuméricos
                         end note

                         note right of Edificio
                               Atenção q os Robots podem deslocar-se entre edificios
                               atraves das passagens
                         end note

                         class "<<Entity>>\nElevador" as Elevador #9be0de
                         {
                             - localizacao: Coordenadas
                         }
                      }

package "Agg-Piso" {
                      class "<<Root>>\nPiso" as Piso #03fc98
                      {
                        - numeroPiso: int
                        - codigoEdificio: CodigoEdificio
                        - descricao: string
                        - passagens: List<Passagem>
                      }

                      class "<<Identifier>>\nCodigo" as CodigoPiso #e4e6aa{
                        - codigo: string
                      }

                     class "<<Entity>>\nMapa" as Mapa #9be0de{
                       - id: int
                       - descricao: string
                       - campus: Campus
                     }

                      note right of Mapa
                                                   "maze": {
                                                           "size": { "width": 8, "depth": 7 },
                                                           "map": [
                                                               [3, 2, 2, 2, 2, 3, 2, 2, 1],
                                                               [1, 0, 0, 0, 0, 1, 0, 0, 1],
                                                               [2, 2, 2, 0, 2, 2, 0, 2, 0],
                                                               [0, 0, 0, 0, 0, 0, 0, 0, 0],
                                                               [3, 2, 2, 2, 2, 2, 0, 0, 1],
                                                               [1, 0, 0, 0, 0, 0, 1, 0, 0],
                                                               [1, 0, 0, 0, 0, 0, 1, 0, 0],
                                                               [2, 2, 2, 2, 2, 2, 2, 2, 0]
                                                           ],
                                                           "exits": [
                                                               [2.0, -1.0],
                                                               [5.0, 8.0]
                                                           ],
                                                           "elevators": [
                                                               [2.0, 8.0]
                                                           ],
                                                           "exitLocation": [2.0, 8.0]
                      end note

                      class "<<Entity>>\nCorredor" as Corredor #9be0de{
                          - localizacao: Coordenadas
                      }
  }

  package "Agg-Passagem" {
                      class "<<Entity>>\nPassagem" as Passagem #9be0de{
                        - EdifOrigem: Edificio
                        - PisoOrigem: Piso
                        - EdifDestino: Edificio
                        - PisoDestino: Piso
                        - localizacao: Coordenadas
                      }
  }

  package "Agg-Sala" {

                        class "<<Root>>\nSala" as Sala #9be0de{
                          - codigoEdificio
                          - pisoEdificio
                          - descricao
                          - nrSala
                        }

                        class "<<Identifier>>\nCodigo" as CodigoSala #e4e6aa{
                          - codigo: string
                        }

                        note right of Sala
                            o requisito 310 Criar sala permite definir um sala num dado piso de um edificio,
                            exemplo sala "B310" no 3º piso do edificio B,
                            com uma categorização dessa sala (Gabinete, Anfiteatro, Laboratório, Outro)
                            e uma breve descrição, ex., "Laboratório de Engenharia de Qualidade"
                        end note
  }


package "Agg-Robot" {
                      class "<<Entity>>\nFrota" as Frota #9be0de{
                        - robots: List<Robot>
                        - drones: List<Drone>
                      }

                      class "<<Entity>>\nRobot" as Robot #9be0de{
                        - id: int
                        - tipo: enum
                        - designação: string
                        - Bateria
                        - activado: boolean
                        - ocupado: boolean
                        - tempoNavegaçao: double
                        - sensores: List<Sensor>
                      }

                      class "<<Entity>>\nDrone" as Drone #9be0de{
                        - id: int
                        - tipo: enum
                        - designação: string
                        - Bateria
                        - activado: boolean
                      }
  }


package "Agg-Tarefa" {
                                      class "<<Entity>>\nTarefa" as Tarefa #9be0de{
                                        - id: int
                                      }

                                      class "<<Entity>>\nTarefaVigilancia" as TarefaVigilancia #9be0de{
                                        - descricao: string
                                        - estado: string
                                      }

                                      class "<<Entity>>\nTarefaEntrega" as TarefaEntrega #9be0de{
                                        - descricao: string
                                        - estado: string
                                      }
}


package "Agg-Employees" {
                          class "<<Root>>\nUtilizador" as Utilizador #03fc98{
                            - id: int
                            - username: string
                            - password: string
                            - role
                          }

                          class "<<Entity>>\nUtente" as Utente #9be0de{
                            - id: int
                            - nome: string
                            - tipo: enum
                          }

                          'class "<<Entity>>\nAutorizacao" as Autorizacao #9be0de{
                          '  - tipo: string
                          '}

                          class "<<Entity>>\nAdministradorDeSistema" as AdministradorDeSistema #9be0de{
                            - id: int
                            - nome: string
                            - autorizacoes: List<Autorizacao>
                          }

                          class "<<Entity>>\nGestorDeFrota" as GestorDeFrota #9be0de{
                            - id: int
                            - nome: string
                          }

                          class "<<Entity>>\nGestorDeCampus" as GestorDeCampus #9be0de{
                            - id: int
                            - nome: string
                          }

                          class "<<Entity>>\nEstudante" as Estudante #9be0de{
                            - id: int
                            - nome: string
                            - curso: string
                            - ano: int
                          }

                          class "<<Entity>>\nFuncionario" as Funcionario #9be0de{
                            - id: int
                            - nome: string
                            - cargo: string
                          }

                          class "<<Entity>>\nDocente" as Docente #9be0de{
                            - id: int
                            - nome: string
                            - cargo: string
                          }
}



  '   class "<<Entity>>\nPercurso" as Percurso #9be0de{
  '     - id: int
  '     - descricao: string
  '   }


  '   class "<<Value Object>>\nCoordenadas" as Coordenadas #e4e6aa{
  '     - latitude: double
  '     - longitude: double
  '   }




  Edificio "1" --> "*" Piso : Contem
  Edificio "1" --> "1" CodigoEdificio : tem
  Edificio "1" --> "1" DimensoesImplantacao : Contem
  Edificio "1" --> "0/1" Elevador : Contem
  'Campus "1" o-- "*" Edificio : Contem
  'Edificio "1" *-- "*" Robot : Contem

  Piso "1" --> "1" CodigoPiso : tem
  Piso "1" --> "*" Sala : Contem
  Piso "1" --> "1" Corredor : Contem
  Piso "1" --> "1" Mapa
  'Piso "1" *-- "*" Porta : Contem

  Passagem "*" -- "2" Piso : Liga
  'Passagem "1"--|> "1"Coordenadas

  Sala "1" --> "1" CodigoSala : tem
  'Sala "1" *-- "1" DimensoesSala : Tem


  Tarefa "1" --|> "*"TarefaEntrega
  Tarefa "1" --|> "*"TarefaVigilancia
  Tarefa "1"--> "*" Robot : É atribuida
  'Tarefa "1"--|> "1"Percurso : Tem
  'Tarefa --|> Utente : É criada

  'Robot "1" --|> "1" Coordenadas : Tem

  'Utente --|> Autorizacao : Tem
  Frota --|> Robot
  Frota --|> Drone
  GestorDeFrota --|> Frota :Configura
  GestorDeFrota --|> Tarefa : Gere
  'GestorDeCampus --|> Mapa :Gere
  'GestorDeCampus --|> Percurso :Gere
  'GestorDeCampus "1" --|> "*"Percurso: Gere

  Utilizador "1"--|> Utente
  Utilizador "1"--|> GestorDeFrota
  Utilizador "1"--|> GestorDeCampus
  Utilizador "1"--|> AdministradorDeSistema
  Utente "1"--|> Estudante
  Utente "1"--|> Docente
  Utente "1"--|> Funcionario
  'AdministradorDeSistema "1"-- "*" Utilizador : Gere
}

@enduml
